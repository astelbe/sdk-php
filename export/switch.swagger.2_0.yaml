swagger: '2.0'
info:
  version: '2.0'
  title: Astel - Telecom Switch
  description: The API allows any Astel partner to retrieve data about telecom products, compare them and allows product ordering and order follow-up with Astel's back-office. If interested to become a partner, please contact us.
  contact:
    email: direction@astel.be
    name: Gr√©goire Bourguignon
    url: https://www.astel.be/
host: api.astel.be
basePath: /
securityDefinitions:
  api-key:
    type: apiKey
    description: Security key provided by Astel, please contact us
    name: x-api-key
    in: header
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /v2_00/brand/{id}:
    get:
      description: Retrieve a Brand by its Id
      summary: brand/{id}
      tags:
      - v2_00
      operationId: V200BrandByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: brand unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Brand'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/status:
    get:
      description: ''
      summary: status/
      tags:
      - v2_00
      operationId: V200StatusGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Statuses'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/postal_code:
    get:
      description: It returns the postal codes available in the Astel database.
      summary: postal_code/
      tags:
      - v2_00
      operationId: V200PostalCodeGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PostalCodes'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product:
    get:
      description: It returns a product list available for sale and their related information
      summary: product/
      tags:
      - v2_00
      operationId: V200ProductGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Products'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}:
    get:
      description: It returns a product available for sale and its related information
      summary: product/{id}
      tags:
      - v2_00
      operationId: V200ProductByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: unique identifier of the product
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Product'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/discount:
    get:
      description: Retrieves the available discounts and the associated products. It is possible to retrieve the discounts filtered by a given Brand (recommended). A single discount could also be returned by its ID. It is advised every morning to refresh the discounts by calling this WS, because these could be deactivated / be over in a day to day basis.
      summary: discount/
      tags:
      - v2_00
      operationId: V200DiscountGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Discounts'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/discount/{id}:
    get:
      description: Retrieve one discount
      summary: discount/{id}
      tags:
      - v2_00
      operationId: V200DiscountByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Discount'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/partner/me:
    get:
      description: partnership (api consumer) related info and params
      summary: partner/me
      tags:
      - v2_00
      operationId: V200PartnerMeGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Partner'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/brand:
    get:
      description: It is used to retrieve the list of available brands ('Base', 'Mobistar', 'Proximus', ...). These could be used to list all providers (operator) in your order form in case of number portability, or to synchronize a product database.
      summary: brand/
      tags:
      - v2_00
      operationId: V200BrandGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Brands'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/option:
    get:
      description: It returns the available options.
      summary: option/
      tags:
      - v2_00
      operationId: V200OptionGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Options'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/option/{id}:
    get:
      description: It returns the available option by its ID.
      summary: option/{id}
      tags:
      - v2_00
      operationId: V200OptionByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Option'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/option/{id}/commission:
    get:
      summary: option/{id}/commission
      tags:
      - v2_00
      operationId: V200OptionCommissionByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Commission'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/option_group:
    get:
      summary: option_group/
      tags:
      - v2_00
      operationId: V200OptionGroupGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OptionGroups'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/option_group/{id}:
    get:
      summary: option_group/{id}
      tags:
      - v2_00
      operationId: V200OptionGroupByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: option group id
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OptionGroup'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/partner/{id}/last_ordered_products:
    get:
      summary: partner/{id}/last_ordered_products
      tags:
      - v2_00
      operationId: V200PartnerLastOrderedProductsByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: partner id
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PartnerLastOrderedProduct'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/partner/{id}/call_center_open:
    get:
      description: Information about opening hours of the partner callcenter
      summary: partner/{id}/call_center_open
      tags:
      - v2_00
      operationId: V200PartnerCallCenterOpenByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: partner id
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PartnerCallCenterOpenSummary'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/availability_zone:
    get:
      description: Retrieve a paginated availability zone listing. An availability zone gives a geographical zone where a product is available for purchase.
      summary: availability_zone/
      tags:
      - v2_00
      operationId: V200AvailabilityZoneGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/AvailabilityZones'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/availability_zone/{id}:
    get:
      description: Retrieve a given availability zone by its id. An availability zone gives a geographical zone where a product is available for purchase.
      summary: availability_zone/{id}
      tags:
      - v2_00
      operationId: V200AvailabilityZoneByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: unique identifier of an availability zone
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/AvailabilityZone'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/postal_code/{id}:
    get:
      summary: postal_code/{id}
      tags:
      - v2_00
      operationId: V200PostalCodeByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: postal code unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PostalCode'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/play_description:
    get:
      description: product description depending on the different product type (play)
      summary: product/{id}/play_description
      tags:
      - v2_00
      operationId: V200ProductPlayDescriptionByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductTypeDescription'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/commission:
    get:
      summary: product/{id}/commission
      tags:
      - v2_00
      operationId: V200ProductCommissionByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Commission'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/web:
    get:
      summary: product/{id}/web
      tags:
      - v2_00
      operationId: V200ProductWebByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductWeb'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/subscription_period:
    get:
      summary: product/{id}/subscription_period
      tags:
      - v2_00
      operationId: V200ProductSubscriptionPeriodByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductSubscriptionPeriods'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/option_relations:
    get:
      summary: product/{id}/option_relations
      tags:
      - v2_00
      operationId: V200ProductOptionRelationsByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductOptionRelations'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/option_group_relations:
    get:
      summary: product/{id}/option_group_relations
      tags:
      - v2_00
      operationId: V200ProductOptionGroupRelationsByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductOptionGroupRelations'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/available/{postal_code_id}:
    get:
      description: Tells if a product is available at a given postal code id
      summary: product/{id}/available/{postal_code_id}
      tags:
      - v2_00
      operationId: V200ProductAvailableByIdAndPostalCodeIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      - name: postal_code_id
        in: path
        required: true
        type: string
        description: postal code unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductAvailablePostalCode'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/compare:
    get:
      summary: product/compare
      tags:
      - v2_00
      operationId: V200ProductCompareGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: is_professional
        in: query
        required: true
        type: boolean
        description: defines whether the customer is looking for private (false) or professional (true) products
      - name: postal_code_id
        in: query
        required: false
        type: integer
        format: int32
        description: ''
      - name: is_mobile
        in: query
        required: false
        type: boolean
        description: Whether the customer is looking for a product that contains the play mobile
      - name: is_fix
        in: query
        required: false
        type: boolean
        description: Whether the customer is looking for a product that contains the play fix
      - name: is_internet
        in: query
        required: false
        type: boolean
        description: Whether the customer is looking for a product that contains the play internet
      - name: is_tv
        in: query
        required: false
        type: boolean
        description: Whether the customer is looking for a product that contains the play tv
      - name: mobile_small_qt
        in: query
        required: false
        type: integer
        format: int32
        description: Number of small mobiles
      - name: mobile_regular_qt
        in: query
        required: false
        type: integer
        format: int32
        description: Number of regular mobiles
      - name: mobile_heavy_qt
        in: query
        required: false
        type: integer
        format: int32
        description: Number of heavy mobiles
      - name: mobile_heavy_int_qt
        in: query
        required: false
        type: integer
        format: int32
        description: Number of heavy international mobiles
      - name: internet_usage
        in: query
        required: false
        type: string
        description: SMALL, MEDIUM or HEAVY
      - name: fix_usage
        in: query
        required: false
        type: string
        description: MEDIUM, HEAVY or HEAVYINT
      - name: count
        in: query
        required: false
        default: 10
        type: integer
        format: int32
        description: Number of results to retrieve
      - name: order
        in: query
        required: false
        default: price
        type: string
        description: "Ordering the results: 'price', 'quality', 'qualityprice', 'delay'"
      - name: language
        in: query
        required: true
        type: string
        description: Language of the comparison. Language influence results.
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductComparisonResults'
          headers: {}
        400:
          description: If unsuported value for internet_usage or fix_usage
          schema:
            $ref: '#/definitions/ExceptionError4xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/status/{id}:
    get:
      summary: status/{id}
      tags:
      - v2_00
      operationId: V200StatusByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: status unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Status'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/product/{id}/available/search/{txt_base_64}:
    get:
      description: Search a product availability textually by its postal code
      summary: product/{id}/available/search/{txt_base_64}
      tags:
      - v2_00
      operationId: V200ProductAvailableSearchByIdAndTxtBase64Get
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: product unique identifier
      - name: txt_base_64
        in: path
        required: true
        type: string
        description: textual content to search the product availability encoded in base64
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ProductAvailablePostalCodes'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/lead:
    post:
      summary: lead/
      tags:
      - v2_00
      operationId: V200LeadPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: language
        in: query
        required: true
        type: string
        description: "ISO2 Language of the lead : 'FR', 'NL', 'EN', 'DE'"
      - name: contact_topic
        in: query
        required: true
        type: string
        description: "['AFTER_SALES', 'LEAD']"
      - name: contact_type
        in: query
        required: true
        type: string
        description: "['MESSAGE','CALLBACK']"
      - name: order_id
        in: query
        required: false
        type: string
        description: Order ID associated to this contact
      - name: recipient_phone
        in: query
        required: false
        type: string
        description: Valid phone number of the lead
      - name: recipient_name
        in: query
        required: false
        type: string
        description: Name of the lead (firstname + lastname, company name,...)
      - name: recipient_email
        in: query
        required: false
        type: string
        description: Valid email of the lead
      - name: message
        in: query
        required: false
        type: string
        description: Lead message sent from the lead to our team
      - name: referer_page
        in: query
        required: false
        type: string
        description: Referer page associated to this lead
      - name: user_ip
        in: query
        required: false
        type: string
        description: User IP sending the lead
      - name: product_id
        in: query
        required: true
        type: string
        description: Id of the product associated to this lead
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/SaveResult'
          headers: {}
        400:
          description: 400 client input error
          schema:
            $ref: '#/definitions/ExceptionError4xx'
        default:
          description: 5xx Error model
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order:
    get:
      summary: order/
      tags:
      - v2_00
      operationId: V200OrderGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Orders'
          headers: {}
        default:
          description: In case of an issue
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order/{id}:
    get:
      summary: order/{id}
      tags:
      - v2_00
      operationId: V200OrderByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Order id
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Order'
          headers: {}
        default:
          description: 5xx errors
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order_line:
    get:
      summary: order_line/
      tags:
      - v2_00
      operationId: V200OrderLineGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OrderLines'
          headers: {}
        default:
          description: In case of system error 5xx
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order_line/{id}:
    get:
      summary: order_line/{id}
      tags:
      - v2_00
      operationId: V200OrderLineByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OrderLine'
          headers: {}
        default:
          description: In case of system error 5xx
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order_line/{id}/workflow_steps:
    get:
      summary: order_line/{id}/workflow_steps
      tags:
      - v2_00
      operationId: V200OrderLineWorkflowStepsByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OrderLineWorkflowSteps'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order_line/{id}/commission:
    get:
      summary: order_line/{id}/commission
      tags:
      - v2_00
      operationId: V200OrderLineCommissionByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OrderLineCommissions'
          headers: {}
        default:
          description: Server error 5xx
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/order_line/{id}/cashback:
    get:
      summary: order_line/{id}/cashback
      tags:
      - v2_00
      operationId: V200OrderLineCashbackByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OrderLineCashbacks'
          headers: {}
        default:
          description: Server error 5xx
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/discount/{id}/subscription_periods:
    get:
      summary: discount/{id}/subscription_periods
      tags:
      - v2_00
      operationId: V200DiscountSubscriptionPeriodsByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/DiscountSubscriptionPeriods'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/brand/{id}/web:
    get:
      description: Retrieve a Brand by its Id
      summary: brand/{id}/web
      tags:
      - v2_00
      operationId: V200BrandWebByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: brand unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/BrandWeb'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/tag:
    get:
      description: ''
      summary: tag/
      tags:
      - v2_00
      operationId: V200TagGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Tags'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/tag/{id}:
    get:
      description: ''
      summary: tag/{id}
      tags:
      - v2_00
      operationId: V200TagByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: tag unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Tag'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/tag_group:
    get:
      description: ''
      summary: tag_group/
      tags:
      - v2_00
      operationId: V200TagGroupGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/TagGroups'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/tag_group/{id}:
    get:
      description: ''
      summary: tag_group/{id}
      tags:
      - v2_00
      operationId: V200TagGroupByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: tag unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/TagGroup'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/hardware:
    get:
      description: It returns a hardware product list available and their related information
      summary: hardware/
      tags:
      - v2_00
      operationId: V200HardwareGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Hardwares'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/hardware/{id}:
    get:
      description: ''
      summary: hardware/{id}
      tags:
      - v2_00
      operationId: V200HardwareByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: hardware unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Hardware'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/hardware/declination/:
    get:
      description: It returns a hardware declination product list available and their related information
      summary: hardware/declination/
      tags:
      - v2_00
      operationId: V200HardwareDeclinationGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/HardwareDeclinations'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/hardware/declination/{id}:
    get:
      description: ''
      summary: hardware/declination/{id}
      tags:
      - v2_00
      operationId: V200HardwareDeclinationByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: hardware declination unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/HardwareDeclination'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
  /v2_00/hardware/declination/{id}/web:
    get:
      description: ''
      summary: hardware/declination/{id}/web
      tags:
      - v2_00
      operationId: V200HardwareDeclinationWebByIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: hardware declination unique identifier
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/HardwareDeclinationWeb'
          headers: {}
        401:
          description: "HTTP 401 Unauthorized: You didn't provided a valid authentication token"
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        404:
          description: 'HTTP 404: Endpoint not found, please verify if the url exists'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        500:
          description: 'HTTP 500: Error with the server'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        405:
          description: 'HTTP 405 Method Not Allowed: Please use GET'
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        403:
          description: HTTP 403 Method Unauthorized
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        422:
          description: HTTP 422 Validation error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        409:
          description: HTTP 409 Operational error
          schema:
            $ref: '#/definitions/ExceptionError5xx'
        default:
          description: An error has been raised
          schema:
            $ref: '#/definitions/ExceptionError5xx'
definitions:
  IsPlay:
    title: IsPlay
    description: map of different play type and if associated or not
    type: object
    properties:
      is_mobile:
        type: boolean
      is_fix:
        type: boolean
      is_internet:
        type: boolean
      is_tv:
        type: boolean
    required:
    - is_mobile
    - is_fix
    - is_internet
    - is_tv
  BrandActivationTime:
    title: BrandActivationTime
    description: indications about the activation time of the product
    type: object
    properties:
      average_activation_time_fix:
        description: 'average number of days for an ordered fix product to be activated / installed. A fix product is a product that contains at least one of the following plays: fix, internet, tv'
        type: integer
        format: int32
      average_activation_time_mobile:
        description: average number of days for an ordered mobile product to be activated / installed by the brand
        type: integer
        format: int32
      average_activation_time_description:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - average_activation_time_fix
    - average_activation_time_mobile
    - average_activation_time_description
  Brand:
    title: Brand
    description: Available brands. These could be used to list all providers (operator) in your order form in case of number portability, or to synchronize a product database.
    type: object
    properties:
      id:
        description: Brand id
        type: integer
        format: int32
      name:
        description: Brand name
        type: string
      slug:
        description: textual, url friendly identifier of the brand (you can find this brand by its slug)
        type: string
      fact_sheet:
        $ref: '#/definitions/BrandFactSheet'
      display:
        $ref: '#/definitions/BrandDisplay'
      is_play:
        $ref: '#/definitions/IsPlay'
      is_private:
        description: the brand sells private product's
        type: boolean
      is_professional:
        description: the brand sells professional product's
        type: boolean
      contact:
        $ref: '#/definitions/BrandContact'
      activation_time:
        $ref: '#/definitions/BrandActivationTime'
      order_constraints:
        $ref: '#/definitions/BrandOrderConstraints'
      quality_score:
        $ref: '#/definitions/BrandQualityScore'
      tos:
        $ref: '#/definitions/TranslatedStringISO2String'
      commission_clawback_duration:
        description: possible duration in month of the clawback if a product subscription is terminated / cancelled by the customer
        type: integer
        format: int32
    required:
    - id
    - name
    - slug
    - fact_sheet
    - display
    - is_play
    - is_private
    - is_professional
    - contact
    - activation_time
    - order_constraints
    - quality_score
    - tos
  BrandContact:
    title: BrandContact
    description: Translated Phone & Email
    type: object
    properties:
      contact_phone:
        $ref: '#/definitions/TranslatedStringISO2String'
      contact_email:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - contact_phone
    - contact_email
  BrandFactSheetLogo:
    title: BrandFactSheetLogo
    description: logo of the brand in varied sizes
    type: object
    properties:
      small:
        description: url of a small size of the brand logo
        type: string
      medium:
        description: url of a medium size of the brand logo
        type: string
      huge:
        description: url of a huge size of the brand logo
        type: string
    required:
    - small
    - medium
    - huge
  BrandOrderConstraints:
    title: BrandOrderConstraints
    description: Constraints and other order related parameters
    type: object
    properties:
      order_needs_iban:
        description: the brand requires an IBAN account for an order. Null = optional.
        type: boolean
      order_needs_id_card_number:
        description: the brand requires a valid ID card number for an order
        type: boolean
      order_needs_national_registry:
        description: the brand requires a valid national registry number for an order
        type: boolean
      order_needs_place_birth:
        description: the brand requires a place of birth for an order
        type: boolean
      order_address_setup_help:
        $ref: '#/definitions/TranslatedStringISO2String'
      order_needs_address_official:
        description: false, the official address is not requested during the ordering process. true, the official address form is shown but not required
        type: boolean
      order_address_official_help:
        $ref: '#/definitions/TranslatedStringISO2String'
      order_needs_address_invoicing:
        description: false, the invoicing address is not requested during the ordering process. true, the invoicing address form is shown but not required
        type: boolean
      order_address_invoicing_help:
        $ref: '#/definitions/TranslatedStringISO2String'
      order_needs_address_delivery:
        description: false, the delivery address is not requested during the ordering process. true, the delivery address form is shown but not required
        type: boolean
      order_address_delivery_help:
        $ref: '#/definitions/TranslatedStringISO2String'
      additional_sim_product_id:
        description: for some products such as the Telenet Wigo, it is possible to add in the pack a given number of sim card / mobile products that are included in the pack with a special price / free. For that purpose, when a product with a mobile play has a number_sim_min > 1 or number_sim_max >1, the extra SIM that should be ordered are the ones among this list of product_id
        type: array
        items:
          type: integer
          format: int32
    required:
    - order_needs_id_card_number
    - order_needs_national_registry
    - order_needs_place_birth
    - order_address_setup_help
    - order_needs_address_official
    - order_address_official_help
    - order_needs_address_invoicing
    - order_address_invoicing_help
    - order_needs_address_delivery
    - order_address_delivery_help
    - additional_sim_product_id
  BrandFactSheet:
    title: BrandFactSheet
    description: Fact sheet describing a brand
    type: object
    properties:
      small_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      logo:
        $ref: '#/definitions/BrandFactSheetLogo'
      color_code:
        description: hexadecimal color code associated to the brand
        type: string
    required:
    - small_description
    - description
    - logo
    - color_code
  TranslatedStringISO2String:
    title: TranslatedStringISO2String
    type: object
    properties:
      FR:
        description: French translation
        type: string
      NL:
        description: Dutch translation
        type: string
      EN:
        description: English translation
        type: string
      DE:
        description: German translation
        type: string
    required:
    - FR
    - NL
    - EN
    - DE
  BrandQualityScore:
    title: BrandQualityScore
    description: Astel quality score of the brand
    type: object
    properties:
      score_mobile:
        type: integer
        format: int32
      score_fix:
        type: integer
        format: int32
      score_internet:
        type: integer
        format: int32
      score_tv:
        type: integer
        format: int32
    required:
    - score_mobile
    - score_fix
    - score_internet
    - score_tv
  Discount:
    title: Discount
    description: A discount is associated to a product by its subscription period. The product subscription period should be selected when the customer is choosing an associated discount
    type: object
    properties:
      id:
        description: discount unique identifier
        type: integer
        format: int32
      short_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      brand_id:
        description: id of the brand associated to this discount
        type: integer
        format: int32
      brand_name:
        description: name of the associated brand
        type: string
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      banner:
        $ref: '#/definitions/TranslatedStringISO2String'
      start_date:
        description: '(YYYY-MM-DD HH:MM:SS): start date of the discount'
        type: string
        format: date-time-rfc1123
      end_date:
        description: '(YYYY-MM-DD HH:MM:SS): end date of the discount'
        type: string
        format: date-time-rfc1123
      is_active:
        description: true if the brand is currently active (false in draft)
        type: boolean
      weight:
        description: number giving the order of display in a page of the discounts
        example: 0
        type: integer
        default: 0
        format: int32
    required:
    - id
    - short_description
    - brand_id
    - brand_name
    - description
    - banner
    - start_date
    - is_active
    - weight
  Option:
    title: Option
    description: An option could be sold with a product
    type: object
    properties:
      id:
        description: option unique identifier
        type: integer
        format: int32
      brand_id:
        description: brand associated to this option
        type: integer
        format: int32
      brand_name:
        description: name of the brand associated to this option
        type: string
      short_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      type:
        description: the option‚Äôs play type. Can be ‚ÄúINTERNET‚Äù, ‚ÄúMOBILE‚Äù, ‚ÄúTV‚Äù or ‚ÄúFIX‚Äù
        type: string
      price:
        description: the option‚Äôs price
        type: number
        format: double
      is_htva:
        description: Indicates if the price is given VAT excluded (true) or tax included (false)
        type: boolean
      is_bestseller:
        description: indicated if the option is marked as best-seller. It‚Äôs advised to show it in a featured way to increase sells
        type: boolean
      price_type:
        description: '‚ÄòMONTH‚Äô,‚ÄôUNIT‚Äô: option‚Äôs price type. Used to indicate what type of price the option is associated to'
        type: string
      activation_fee:
        description: if the option requires a payment to be activated, this value indicates the price the customer must pay
        type: number
        format: double
      question:
        $ref: '#/definitions/TranslatedStringISO2String'
      type_description:
        $ref: '#/definitions/OptionTypeDescription'
      banner:
        description: url of the banner illustrating the option
        type: string
    required:
    - id
    - brand_id
    - brand_name
    - short_description
    - description
    - type
    - price
    - is_htva
    - is_bestseller
    - price_type
    - activation_fee
    - question
    - type_description
    - banner
  OptionTypeDescription:
    title: OptionTypeDescription
    description: some characteristics associated to the given plays
    type: object
    properties:
      mobile:
        $ref: '#/definitions/OptionTypeDescriptionMobile'
    required:
    - mobile
  OptionTypeDescriptionMobile:
    title: OptionTypeDescriptionMobile
    description: mobile related option data
    type: object
    properties:
      included_data_volume:
        description: 'mixed [int - string]: maximum traffic volume per month with the mobile internet connectivity (2G-3G-4G‚Ä¶) in mb that will be added to the associated product. If the data volume is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed'
        type: string
      shared_data_volume_sim:
        description: 'mixed [int - string]: number of mb of traffic volume allowed shared among every sim card of the same subscription (new product type as Wigo, Tuttimus‚Ä¶) that will be added to the associated product. If the data volume is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed'
        type: string
    required:
    - included_data_volume
    - shared_data_volume_sim
  Product:
    title: Product
    type: object
    properties:
      id:
        description: product identifier
        type: integer
        format: int32
      slug:
        $ref: '#/definitions/TranslatedStringISO2String'
      brand_id:
        description: brand identifier
        type: integer
        format: int32
      brand_name:
        description: brand name
        type: string
      brand_slug:
        description: textual, url friendly identifier of the brand (you can find this brand by its slug)
        type: string
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      medium_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      short_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      banner:
        $ref: '#/definitions/TranslatedStringISO2String'
      banner_small:
        $ref: '#/definitions/TranslatedStringISO2String'
      price:
        type: number
        format: double
      discounted_price:
        description: ounted price per month of the product
        type: number
        format: double
      discounted_price_period:
        description: number of months the promo price applies
        type: integer
        format: int32
      activation_fee:
        description: onetime fee for activating the product (for the brand)
        type: number
        format: double
      installation_fee:
        description: onetime fee for installing the product by the customer (for the brand)
        type: number
        format: double
      is_mobile:
        description: tells if the product package contains a mobile product
        type: boolean
      is_fix:
        description: tells if the product package contains a fix line product
        type: boolean
      is_internet:
        description: ls if the product package contains an internet product
        type: boolean
      is_tv:
        description: tells if the product package contains a tv product
        type: boolean
      is_hardware:
        description: tells if the product package contains a hardware product such a TV, smartphone‚Ä¶
        type: boolean
      quality_score:
        description: Astel rating for this product, from 0 to 100 (depends on the customer service / product quality perceived by Astel). Null is returned if unknown
        type: integer
        format: int32
      max_activation_time:
        description: max number of days before the product is activated. This is not contractual; it‚Äôs the number of days Astel has noticed the Operator to take for product activation. This product activation depends on the play of the product. Null is returned if unknown
        type: integer
        format: int32
      is_private:
        description: the product is designated for private use (could be a private + professional product)
        type: boolean
      is_professional:
        description: the product is designated for professional use (could be a private + professional product)
        type: boolean
      is_htva:
        description: false = the price is encoded with tax included. true = the price is encoded with the tax excluded
        type: boolean
      is_visible:
        description: tells if the product should be visible in a product info page (publicly available website). By default, all products available through the API is orderable
        type: boolean
      is_comparator_displayed:
        description: tells if the product is displayed on the comparator and comparator results
        type: boolean
      is_best_seller:
        description: tells if the product is a featured product and should be featured on the product pages and websites
        type: boolean
      is_featured:
        description: tells if the product is featured on product page and should be sold / shown first
        type: boolean
      availability_zone_id:
        description: unique identifier of the zone where the product is sold
        type: integer
        format: int32
    required:
    - id
    - slug
    - brand_id
    - brand_name
    - brand_slug
    - name
    - description
    - medium_description
    - short_description
    - banner
    - banner_small
    - price
    - discounted_price
    - discounted_price_period
    - activation_fee
    - installation_fee
    - is_mobile
    - is_fix
    - is_internet
    - is_tv
    - is_hardware
    - is_private
    - is_professional
    - is_htva
    - is_visible
    - is_comparator_displayed
    - is_best_seller
    - is_featured
    - availability_zone_id
  ProductTypeDescription:
    title: ProductTypeDescription
    description: product description depending on the different product type
    type: object
    properties:
      mobile:
        $ref: '#/definitions/ProductTypeDescriptionMobile'
      fix:
        $ref: '#/definitions/ProductTypeDescriptionFix'
      internet:
        $ref: '#/definitions/ProductTypeDescriptionInternet'
      tv:
        $ref: '#/definitions/ProductTypeDescriptionTv'
      hardware:
        $ref: '#/definitions/ProductTypeDescriptionHardware'
  ProductTypeDescriptionMobile:
    title: ProductTypeDescriptionMobile
    description: product description for mobile part of the pack product
    type: object
    properties:
      included_name:
        $ref: '#/definitions/TranslatedStringISO2String'
      included_minutes_calls:
        description: 'mixed[int-string]: number of call minutes included per month in the product. If the number of minute is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed. If the number of minute is unlimited during the evening and weekend, ‚ÄòEWE‚Äô will be returned'
        type: string
      included_sms:
        description: 'mixed[int-string]: number of SMS included per month in the product. If the number of sms is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed'
        type: string
      price_minute_not_included:
        description: price of a minute call once the customer has already consumed all his flat rate
        type: number
        format: double
      price_mega_not_included:
        description: price of a mb of data once the customer has already consumed all his flat rate
        type: number
        format: double
      price_sms_not_included:
        description: price of a sms once the customer has already consumed all his flat rate
        type: number
        format: double
      included_data_volume:
        description: 'mixed[int-string] : maximum traffic volume per month with the mobile internet connectivity (2G-3G-4G‚Ä¶) in mb. If the data volume is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed'
        type: string
      included_minutes_calls_fleet:
        description: 'mixed[int-string]: number of min of voice calls allowed shared among every sim card of the same subscription (new formule type as Wigo, Tuttimus‚Ä¶). If the data volume is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed'
        type: string
      shared_data_volume_sim:
        description: 'mixed[int-string]: number of mb of traffic volume allowed shared among every sim card of the same subscription (new formule type as Wigo, Tuttimus‚Ä¶). If the data volume is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed'
        type: string
      number_sim_min:
        description: the min number of SIM this pack could be sold for ‚Äì same product containing multiple mobiles, usually with shared data
        type: integer
        format: int32
      number_sim_max:
        description: the max number of SIM this pack could be sold for
        type: integer
        format: int32
      price_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      consumer_caller_profile:
        description: 'customer profile associated to that play of the product: o	‚ÄòSMALL‚Äô: one call from time to time; o	‚ÄòMEDIUM‚Äô: regular user; o	‚ÄòHEAVY‚Äô: calling intensive usage; o	‚ÄòHEAVYINT‚Äô: calling intensive usage of a traveler;'
        type: array
        items:
          type: string
    required:
    - included_name
    - included_minutes_calls
    - included_sms
    - price_minute_not_included
    - price_mega_not_included
    - price_sms_not_included
    - included_data_volume
    - included_minutes_calls_fleet
    - shared_data_volume_sim
    - number_sim_min
    - number_sim_max
    - price_description
    - consumer_caller_profile
  ProductTypeDescriptionFix:
    title: ProductTypeDescriptionFix
    description: product description for fix part of the pack product
    type: object
    properties:
      included_minutes_calls:
        description: 'mixed[int-string]: number of call minutes included per month in the product. If the number of minute is unlimited, the value ‚ÄòUNLIMITED‚Äô will be passed. If the number of minute is unlimited during the evening and weekend, ‚ÄòEWE‚Äô will be returned'
        type: string
      price_minute_not_included_peak:
        description: price of a minute call once the customer has already consumed all his flat rate during peak hour
        type: number
        format: double
      price_minute_not_included_offpeak:
        description: price of a minute call once the customer has already consumed all his flat rate during off-peak hour
        type: number
        format: double
      price_not_included_connection:
        description: price for the connection of an extra call not included in the package
        type: number
        format: double
      number_line_min:
        description: 'for the comparator: the min number of phone lines this pack could be sold for'
        type: integer
        format: int32
      number_line_max:
        description: 'for the comparator: the max number of phone lines this pack could be sold for'
        type: integer
        format: int32
      price_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      consumer_caller_profile:
        description: customer profile associated to that play of the product
        type: array
        items:
          type: string
    required:
    - included_minutes_calls
    - price_minute_not_included_peak
    - price_minute_not_included_offpeak
    - price_not_included_connection
    - number_line_min
    - number_line_max
    - price_description
    - consumer_caller_profile
  ProductTypeDescriptionInternet:
    title: ProductTypeDescriptionInternet
    description: product description for internet part of the pack product
    type: object
    properties:
      is_static_ip:
        description: if the operator provides a static IP that is uniquely assigned to the line user
        type: boolean
      bandwidth_download:
        description: provided maximum download speed of the connection in Mbit/s
        type: integer
        format: int32
      bandwidth_upload:
        description: provided maximum upload speed of the connection in Mbit/s
        type: integer
        format: int32
      bandwidth_volume:
        description: 'mixed[int-string]: maximum downloadable content (traffic volume) in Gigabytes. If the bandwidth volume is unlimited, ‚ÄòUNLIMITED‚Äô will be returned'
        type: string
      price_giga_not_included:
        description: price of a giga of data once the customer has already consumed all his flat rate
        type: number
        format: double
      number_user_min:
        description: number min of user this connection is advised for
        type: integer
        format: int32
      number_user_max:
        description: number max of user this connection is advised for
        type: integer
        format: int32
      price_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      consumer_profile:
        description: 'customer profile associated to that play of the product: o	‚ÄòMEDIUM‚Äô: regular user; o	‚ÄòHEAVY‚Äô: download / usage intensive user;'
        type: array
        items:
          type: string
      is_wifi_modem_provided:
        description: if the operator provides a wifi modem with this connection
        type: boolean
    required:
    - is_static_ip
    - bandwidth_download
    - bandwidth_upload
    - bandwidth_volume
    - price_giga_not_included
    - number_user_min
    - number_user_max
    - price_description
    - consumer_profile
    - is_wifi_modem_provided
  ProductTypeDescriptionTv:
    title: ProductTypeDescriptionTv
    description: product description for tv part of the pack product
    type: object
    properties:
      size_number_tv_min:
        description: the min number of tv this pack is sold for
        type: integer
        format: int32
      size_number_tv_max:
        description: the max number of tv this pack is sold for
        type: integer
        format: int32
      has_video_on_demand:
        description: if the operator provides a platform for renting easily movies from the decoder
        type: boolean
      is_interactive:
        description: if the provided decoder gives special interactive content
        type: boolean
      number_tv_channel:
        description: number of tv channels included in the offer
        type: integer
        format: int32
      number_hd_tv_channel:
        description: number of High Definition tv channels included in the offer
        type: integer
        format: int32
      price_description:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - size_number_tv_min
    - size_number_tv_max
    - has_video_on_demand
    - is_interactive
    - number_tv_channel
    - number_hd_tv_channel
    - price_description
  Brands:
    title: Brands
    description: The Brands model is a collection model  that contains zero or more references to a set of Brand, and links that guide you on ways to interact with the Brands. The collection offers a paginated view of Brand.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/BrandsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  BrandsEmbedded:
    title: BrandsEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/Brand'
    required:
    - items
  Discounts:
    title: Discounts
    description: The Discounts model is a collection model  that contains zero or more references to a set of Discount, and links that guide you on ways to interact with the Discounts. The collection offers a paginated view of Discount.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/DiscountsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  DiscountsEmbedded:
    title: DiscountsEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/Discount'
    required:
    - items
  Options:
    title: Options
    description: The Options model is a collection model  that contains zero or more references to a set of Option, and links that guide you on ways to interact with the Options. The collection offers a paginated view of Option.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/OptionsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OptionsEmbedded:
    title: OptionsEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/Option'
    required:
    - items
  Commission:
    title: Commission
    description: Associated model commission for the calling Partner.
    type: object
    properties:
      cashback_amount:
        description: Cashback given for the customer
        example: 0
        type: integer
        default: 0
        format: int32
      commission_amount:
        description: Commission given for the partner
        example: 0
        type: integer
        default: 0
        format: int32
    required:
    - cashback_amount
    - commission_amount
  OptionGroup:
    title: OptionGroup
    description: Group of associated options.
    type: object
    properties:
      id:
        description: unique identifier of the OptionGroup
        type: integer
        format: int32
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      brand_id:
        description: brand identifier associated with this model
        type: integer
        format: int32
      brand_name:
        description: name of the brand associated with this model
        type: string
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      question:
        $ref: '#/definitions/TranslatedStringISO2String'
      min_select:
        description: minimum number of option the customer has to choose. If min_select == 1, the customer must choose at least 1 option;
        example: 0
        type: integer
        default: 0
        format: int32
      max_select:
        description: maximum number of option the customer has to choose. If max_select == 2, the customer must choose at maximum 2 options and at minimum min_select option(s)
        example: 1
        type: integer
        default: 1
        format: int32
      banner:
        description: URL of the banner illustrating the option group
        type: string
      type:
        description: '[INTERNET ‚Äì TV ‚Äì FIX ‚Äì MOBILE]: type of the option group'
        type: string
      option_id_default:
        description: Default selected associated option id when shown to the customer.
        type: string
      is_shown_hardware_session:
        description: Tells if the option group could be displayed during the ordering process when a hardware session is opened for ordering
        type: boolean
    required:
    - id
    - name
    - brand_id
    - brand_name
    - description
    - question
    - min_select
    - max_select
    - banner
    - type
    - option_id_default
    - is_shown_hardware_session
  OptionGroups:
    title: OptionGroups
    description: The OptionGroups model is a collection model  that contains zero or more references to a set of OptionGroup, and links that guide you on ways to interact with the OptionGroups. The collection offers a paginated view of OptionGroup.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/OptionGroupEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OptionGroupEmbedded:
    title: OptionGroupEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/OptionGroup'
    required:
    - items
  Partner:
    title: Partner
    description: Info about your partnership with Astel - modules params.
    type: object
    properties:
      id:
        description: unique identifier
        type: integer
        format: int32
      parent_partner_id:
        description: id of the parent partner (in case of sub-partner)
        type: integer
        format: int32
      name:
        description: internal designation name of the Partner
        type: string
      website_base_url:
        $ref: '#/definitions/TranslatedStringISO2String'
      contact_email:
        $ref: '#/definitions/TranslatedStringISO2String'
      contact_phone:
        $ref: '#/definitions/TranslatedStringISO2String'
      preferred_template:
        description: unique identifier of preferred order template
        type: integer
        format: int32
      preferred_signature:
        description: unique identifier of the signature used for the order followup emails exchanged with the customer
        type: string
      logo_url:
        description: url of the partner logo
        type: string
      tos_url:
        $ref: '#/definitions/TranslatedStringISO2String'
      analytics_profile:
        description: id of the analytics profile for statistical order followup
        type: string
      analytics_ua:
        description: id of the analytic ua for statistical order followup
        type: string
      analytics_adwords_conversion:
        description: analytics adwords conversion id for statistical order followup
        type: string
      restricted_brands:
        description: ids of the restricted brands for comparison
        type: array
        items:
          type: integer
          format: int32
    required:
    - id
    - name
    - website_base_url
    - contact_email
    - contact_phone
    - preferred_signature
    - logo_url
    - tos_url
    - analytics_profile
    - analytics_ua
    - analytics_adwords_conversion
    - restricted_brands
  PartnerLastOrderedProduct:
    title: PartnerLastOrderedProduct
    description: Last ordered product summary of a partner
    type: object
    properties:
      product_id:
        description: ordered product id
        type: integer
        format: int32
      product_name:
        $ref: '#/definitions/TranslatedStringISO2String'
      product_sheet_url:
        $ref: '#/definitions/TranslatedStringISO2String'
      cashback_amount:
        description: cashback amount given to the customer
        example: 0
        type: number
        default: 0
        format: double
      brand_name:
        description: brand name of the ordered product
        type: string
      date:
        description: datetime of the product order date
        type: string
        format: date-time
    required:
    - product_id
    - product_name
    - product_sheet_url
    - cashback_amount
    - brand_name
    - date
  PartnerCallCenterOpenSummary:
    title: PartnerCallCenterOpenSummary
    description: summary of the callcenter status to display to the customer
    type: object
    properties:
      is_open:
        $ref: '#/definitions/TranslatedStringISO2String'
      text_to_display:
        $ref: '#/definitions/TranslatedStringISO2String'
      call_center_opening_hours:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - is_open
    - text_to_display
    - call_center_opening_hours
  AvailabilityZone:
    title: AvailabilityZone
    description: Geographical zone where a product is available for purchase
    type: object
    properties:
      id:
        description: unique identifier of the availability zone
        type: integer
        format: int32
      name:
        description: internal name of the availability zone
        type: string
    required:
    - id
    - name
  AvailabilityZones:
    title: AvailabilityZones
    description: The AvailabilityZones model is a collection model  that contains zero or more references to a set of AvailabilityZone, and links that guide you on ways to interact with the AvailabilityZones. The collection offers a paginated view of AvailabilityZone.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/AvailabilityZoneEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  AvailabilityZoneEmbedded:
    title: AvailabilityZoneEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/AvailabilityZone'
    required:
    - items
  PostalCode:
    title: PostalCode
    type: object
    properties:
      id:
        description: unique identifier of the postal code
        type: integer
        format: int32
      city:
        description: name of the city in his original language, used to quickly review the names in a listing
        type: string
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      postal_code:
        description: postal code of the city as it should be written on an envelope
        type: string
      country:
        description: iso2 country code of the country - example BE for Belgium
        type: string
    required:
    - id
    - city
    - name
    - postal_code
    - country
  PostalCodes:
    title: PostalCodes
    description: The PostalCodes model is a collection model  that contains zero or more references to a set of PostalCode, and links that guide you on ways to interact with the PostalCodes. The collection offers a paginated view of PostalCode.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/PostalCodeEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  PostalCodeEmbedded:
    title: PostalCodeEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/PostalCode'
    required:
    - items
  ProductEmbedded:
    title: ProductEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/Product'
    required:
    - items
  Products:
    title: Products
    description: The Products model is a collection model  that contains zero or more references to a set of Product, and links that guide you on ways to interact with the Products. The collection offers a paginated view of Product.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        description: Items returned by the query.
        type: array
        items:
          $ref: '#/definitions/ProductEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  ProductWeb:
    title: ProductWeb
    description: web related product data
    type: object
    properties:
      product_sheet_url:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - product_sheet_url
  ProductSubscriptionPeriod:
    title: ProductSubscriptionPeriod
    description: key-value giving the subscription periods available for this product. A subscription period is the minimum of the contract duration for subscribing a product. There are sometimes long subscriptions periods for products associated to a special discount. So, a customer that wants to receive a given discount must choose the right subscription period.
    type: object
    properties:
      id:
        description: subscription period / product unique identifier
        type: integer
        format: int32
      product_id:
        description: product unique identifier
        type: string
      duration:
        description: Number of month of the subscription period
        type: integer
        format: int32
    required:
    - id
    - product_id
    - duration
  ProductSubscriptionPeriodEmbedded:
    title: ProductSubscriptionPeriodEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/ProductSubscriptionPeriod'
    required:
    - items
  ProductSubscriptionPeriods:
    title: ProductSubscriptionPeriods
    description: The ProductSubscriptionPeriods model is a collection model  that contains zero or more references to a set of ProductSubscriptionPeriod, and links that guide you on ways to interact with the ProductSubscriptionPeriods. The collection offers a paginated view of ProductSubscriptionPeriod.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: string
      _embedded:
        $ref: '#/definitions/ProductSubscriptionPeriodEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  ProductOptionRelation:
    title: ProductOptionRelation
    description: agremented association between a product and an option
    type: object
    properties:
      option_id:
        description: option unique identifier
        type: integer
        format: int32
      is_free:
        description: true if the option is given for free with the product subscription. false otherwise.
        type: boolean
      is_mandatory:
        description: true if the option is mandatory to order with the product
        type: boolean
    required:
    - option_id
    - is_free
    - is_mandatory
  ProductOptionRelationEmbedded:
    title: ProductOptionRelationEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/ProductOptionRelation'
    required:
    - items
  ProductOptionRelations:
    title: ProductOptionRelations
    description: The ProductOptionRelations model is a collection model  that contains zero or more references to a set of ProductOptionRelation, and links that guide you on ways to interact with the ProductOptionRelations. The collection offers a paginated view of ProductOptionRelation.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/ProductOptionRelationEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  ProductOptionGroupRelation:
    title: ProductOptionGroupRelation
    description: agremented association between a product and an option group
    type: object
    properties:
      option_group_id:
        description: unique identifier of the option group
        type: integer
        format: int32
      is_free:
        description: true if the option group is given for free with the product subscription. false otherwise.
        type: boolean
      is_mandatory:
        description: true if the option group is mandatory to order with the product
        type: boolean
    required:
    - option_group_id
    - is_free
    - is_mandatory
  ProductOptionGroupRelationEmbedded:
    title: ProductOptionGroupRelationEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/ProductOptionGroupRelation'
    required:
    - items
  ProductOptionGroupRelations:
    title: ProductOptionGroupRelations
    description: The ProductOptionGroupRelations model is a collection model  that contains zero or more references to a set of ProductOptionGroupRelation, and links that guide you on ways to interact with the ProductOptionGroupRelations. The collection offers a paginated view of ProductOptionGroupRelation.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        description: Items returned by the query.
        type: array
        items:
          $ref: '#/definitions/ProductOptionGroupRelationEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  ProductAvailablePostalCode:
    title: ProductAvailablePostalCode
    type: object
    properties:
      is_available:
        description: True if the product is available for sale at the given postal code
        type: boolean
      postal_code_id:
        description: unique identifier of the associated postal code
        type: integer
        format: int32
    required:
    - is_available
    - postal_code_id
  ProductComparisonResult:
    title: ProductComparisonResult
    description: Result of a product comparison
    type: object
    properties:
      product_M:
        description: List of mobile products advised to be sold for this comparison
        type: array
        items:
          type: string
      product_F:
        description: List of fix products advised to be sold for this comparison
        type: array
        items:
          type: string
      product_I:
        description: List of internet products advised to be sold for this comparison
        type: array
        items:
          type: string
      product_T:
        description: List of tv products advised to be sold for this comparison
        type: array
        items:
          type: string
      number_play:
        description: number of different plays sold by this result
        type: integer
        format: int32
      number_products:
        description: number of different products sold by this result
        type: integer
        format: int32
      quality_score:
        description: average of quality score of the different products sold by this result
        type: integer
        format: int32
      total_price:
        description: total price of the products (*quantity)
        type: number
        format: double
      total_price_without_discount:
        description: total price of the products (*quantity) without discount
        type: number
        format: double
      total_price_discount_duration:
        description: number of month the price is reduced
        type: integer
        format: int32
      total_options:
        description: total price of the options (*quantity)
        type: number
        format: double
      total_option_without_discount:
        description: total price of the options (*quantity) without discount
        type: number
        format: double
      total_option_discount_duration:
        description: number of month the price of options is reduced
        type: integer
        format: int32
      total_fix_expenses:
        description: Sum of activation fee + installation fee of every products / options
        type: number
        format: double
      total_price_extra:
        description: Sum of extra
        type: number
        format: double
      is_htva:
        description: false if the price is encoded with vat, true if vat included
        type: boolean
      max_activation_time:
        description: max number of days the products are installed by the customer in average
        type: integer
        format: int32
      calculation_date:
        description: timestamp of the calculation
        type: integer
        format: int32
      combinations_type:
        description: Type of product with 1111 form (plays) and their associations.
        type: string
      brand_ids:
        description: array of the brand IDs associated with the products of this comparison
        type: object
        additionalProperties:
          type: integer
          format: int32
      product_ids:
        description: array of the product IDs associated with this comparison
        type: object
        additionalProperties:
          type: string
      number_suppliers:
        description: number of differents brands in this comparison (more brands = multiple contracts to fill for the customer)
        type: integer
        format: int32
      quality_price_score:
        description: Synthetic score of the quality/price of the comparison
        type: integer
        format: int32
      cart_summary:
        description: Summary of this order with quantities
        type: object
        additionalProperties:
          type: string
      product_arrangement_token:
        description: Token used to identify the product arrangement (product combination) and can be used to order
        type: string
    required:
    - product_M
    - product_F
    - product_I
    - product_T
    - number_play
    - number_products
    - quality_score
    - total_price
    - total_price_without_discount
    - total_price_discount_duration
    - total_options
    - total_option_without_discount
    - total_option_discount_duration
    - total_fix_expenses
    - total_price_extra
    - is_htva
    - max_activation_time
    - calculation_date
    - combinations_type
    - brand_ids
    - product_ids
    - number_suppliers
    - quality_price_score
    - cart_summary
  ProductComparisonResultEmbed:
    title: ProductComparisonResultEmbed
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/ProductComparisonResult'
    required:
    - items
  ProductComparisonResults:
    title: ProductComparisonResults
    description: The ProductComparisonResults model is a collection model  that contains zero or more references to a set of ProductComparisonResult, and links that guide you on ways to interact with the ProductComparisonResults. The collection offers a paginated view of ProductComparisonResult.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/ProductComparisonResultEmbed'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  Status:
    title: Status
    description: A status is attached with order / cashback / commission and commission partner during order followup. A status describes the actions performed during the order processing.
    type: object
    properties:
      id:
        description: status unique identifier
        type: integer
        format: int32
      type:
        description: ORDER, CASHBACK, COMMPART, COMMISSION
        type: string
      name:
        description: internal name of the status
        type: string
      color:
        description: "color of the status, determines an informal status group. It's a very simple classification, but powerful: an order starts in the GRAY status and tend to GREEN. The darker the status is, the unlikely the order will be cancelled / won't succeed. Each color is for a given type of action: GREEN = processed, BLACK = cancelled, RED = to contact customer, ...;"
        type: string
      description:
        description: description of the status in EN
        type: string
      next_status_id:
        description: optional, preferred or suggested next status
        type: integer
        format: int32
      selectable_next_statuses:
        description: list of status id. This list gives the possible next statuses
        type: array
        items:
          type: integer
          format: int32
      send_email:
        description: whether a template email should be sent to the customer (suggested email)
        type: boolean
      send_sms:
        description: whether a template sms should be sent to the customer (suggested sms)
        type: boolean
      memo_date_set_status_change:
        description: whether a memo date should be set for handling the associated entity (reminder);
        type: boolean
      memo_date_nbr_days:
        description: the number of days the reminder should be set
        type: integer
        format: int32
      execute_automatically:
        description: whether the status is the automatic state (is a status that is automatically passed by the system on the memo date). Doesn‚Äôt implies manual intervention
        type: boolean
      is_final:
        description: whether the associated entity is in a final state. In a final state, the associated entity handling is over and shouldn‚Äôt have later manual processing
        type: boolean
    required:
    - id
    - type
    - name
    - color
    - description
    - send_email
    - send_sms
    - memo_date_set_status_change
    - execute_automatically
    - is_final
  StatusEmbedded:
    title: StatusEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/Status'
    required:
    - items
  Statuses:
    title: Statuses
    description: The Statuses model is a collection model  that contains zero or more references to a set of Status, and links that guide you on ways to interact with the Statuses. The collection offers a paginated view of Status.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/StatusEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  ExceptionError5xx:
    title: ExceptionError5xx
    description: Error model returned when http code != 200/204
    type: object
    properties:
      message:
        description: Indication of the error origin, if error there is
        type: string
      parameters:
        description: Key value map of the api understood parameters passed
        type: object
        additionalProperties:
          type: string
      transaction_id:
        description: API call transaction ID used for debug purpose. Please communicate this id to Astel for error reporting.
        type: string
      datetime:
        description: Datetime of the call
        type: string
        format: date-time
      execution_time:
        description: Time in ms the call took to be processed internally
        type: integer
        format: int32
      http_code:
        description: HTTP code associated with this error
        type: integer
        format: int32
    required:
    - message
    - parameters
    - transaction_id
    - datetime
    - execution_time
    - http_code
  ProductAvailablePostalCodeEmbedded:
    title: ProductAvailablePostalCodeEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/ProductAvailablePostalCode'
    required:
    - items
  ProductAvailablePostalCodes:
    title: ProductAvailablePostalCodes
    description: The ProductAvailablePostalCodes model is a collection model  that contains zero or more references to a set of ProductAvailablePostalCode, and links that guide you on ways to interact with the ProductAvailablePostalCodes. The collection offers a paginated view of ProductAvailablePostalCode.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/ProductAvailablePostalCodeEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  SaveResult:
    title: SaveResult
    description: Model returned when an entity is created / saved and contains the validations errors
    type: object
    properties:
      message:
        description: Indication of the error origin, if error there is
        type: string
      parameters:
        description: Key value map of the api understood parameters passed
        type: object
        additionalProperties:
          type: string
      transaction_id:
        description: API call transaction ID used for debug purpose. Please communicate this id to Astel for error reporting.
        type: string
      datetime:
        description: Datetime of the call
        type: string
        format: date-time
      execution_time:
        description: Time in ms the call took to be processed internally
        type: integer
        format: int32
      data:
        description: Extra data with the save
        type: object
        additionalProperties:
          type: string
      parameters_in_warning:
        description: List of param_name -> translated validation error message for parameters in warning (not blocking the save)
        type: object
        additionalProperties:
          type: string
    required:
    - message
    - parameters
    - transaction_id
    - datetime
    - execution_time
    - data
    - parameters_in_warning
  ExceptionError4xx:
    title: ExceptionError4xx
    description: Error model returned when http code == 400 = client input errors
    type: object
    properties:
      message:
        description: Indication of the error origin, if error there is
        type: string
      parameters:
        description: Key value map of the api understood parameters passed
        type: object
        additionalProperties:
          type: string
      transaction_id:
        description: API call transaction ID used for debug purpose. Please communicate this id to Astel for error reporting.
        type: string
      datetime:
        description: Datetime of the call
        type: string
        format: date-time
      execution_time:
        description: Time in ms the call took to be processed internally
        type: integer
        format: int32
      http_code:
        description: HTTP code associated with this error
        type: integer
        format: int32
      error:
        description: "for validation errors: 'FIELDS_VALIDATION_ERROR'"
        type: string
      parameters_in_error:
        description: Given parameters in error with the description of the error (translated) [parameter_name=>'translated_reason',...]
        type: object
        additionalProperties:
          type: string
      parameters_in_warning:
        description: List of param_name -> translated validation error message for parameters in warning (not blocking the save)
        type: object
        additionalProperties:
          type: string
    required:
    - message
    - parameters
    - transaction_id
    - datetime
    - execution_time
    - http_code
    - error
    - parameters_in_error
    - parameters_in_warning
  Order:
    title: Order
    type: object
    properties:
      id:
        type: integer
        format: int32
      partner_order_id:
        type: string
      order_possible_alternatives:
        type: string
      order_date:
        type: string
        format: date-time
      language:
        $ref: '#/definitions/ISO2Language'
      customer_note:
        type: string
      digital_signature:
        $ref: '#/definitions/OrderDigitalSignature'
      voucher_code:
        type: string
    required:
    - id
    - order_date
    - language
    - digital_signature
  OrderDigitalSignature:
    title: OrderDigitalSignature
    description: Order numeric signature of the customer confirming his order
    type: object
    properties:
      done_at:
        description: Place used by the customer at the end of the order form as signature
        type: string
      initials:
        description: Initials used by the customer at the end of the order form as signature
        type: string
  ISO2Language:
    title: ISO2Language
    example: FR
    type: string
    enum:
    - FR
    - NL
    - EN
    - DE
  Orders:
    title: Orders
    description: The Orders model is a collection model  that contains zero or more references to a set of Order, and links that guide you on ways to interact with the Orders. The collection offers a paginated view of Order.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        description: Items returned by the query.
        type: array
        items:
          $ref: '#/definitions/OrdersEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OrdersEmbedded:
    title: OrdersEmbedded
    type: object
    properties:
      items:
        $ref: '#/definitions/Order'
    required:
    - items
  OrderLine:
    title: OrderLine
    type: object
    properties:
      id:
        type: integer
        format: int32
      order_id:
        type: integer
        format: int32
      product_current:
        $ref: '#/definitions/OrderLineProductCurrent'
      product_ordered:
        $ref: '#/definitions/OrderLineProductOrdered'
      wished_activation_date:
        type: string
        format: date-time
    required:
    - id
    - order_id
    - product_current
    - product_ordered
    - wished_activation_date
  OrderLineProductCurrent:
    title: OrderLineProductCurrent
    type: object
    properties:
      product_id:
        type: integer
        format: int32
      product_name:
        type: string
      contract_duration:
        type: integer
        format: int32
      discount_description:
        type: string
      is_mobile:
        type: boolean
      is_fix:
        type: boolean
      is_internet:
        type: boolean
      is_tv:
        type: boolean
      mobile:
        $ref: '#/definitions/OrderLineProductPlay'
      fix:
        $ref: '#/definitions/OrderLineProductPlay'
      internet:
        $ref: '#/definitions/OrderLineProductPlay'
      tv:
        $ref: '#/definitions/OrderLineProductPlay'
    required:
    - product_name
    - discount_description
    - is_mobile
    - is_fix
    - is_internet
    - is_tv
  OrderLineProductPlay:
    title: OrderLineProductPlay
    type: object
    properties:
      activation_date:
        type: string
        format: date-time
      options:
        type: string
  OrderLineProductOrdered:
    title: OrderLineProductOrdered
    type: object
    properties:
      product_id:
        type: integer
        format: int32
      product_name:
        type: string
      is_mobile:
        type: boolean
      is_fix:
        type: boolean
      is_internet:
        type: boolean
      is_tv:
        type: boolean
    required:
    - product_name
    - is_mobile
    - is_fix
    - is_internet
    - is_tv
  OrderLines:
    title: OrderLines
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/OrderLinesEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OrderLinesEmbedded:
    title: OrderLinesEmbedded
    type: object
    properties:
      items:
        $ref: '#/definitions/OrderLine'
    required:
    - items
  OrderLineWorkflowStep:
    title: OrderLineWorkflowStep
    type: object
    properties:
      id:
        type: integer
        format: int32
      order_line_id:
        type: integer
        format: int32
      date:
        type: string
        format: date-time
      description:
        type: string
      backoffice_comment:
        type: string
      email_id:
        type: integer
        format: int32
      user_id:
        type: integer
        format: int32
      status_id:
        type: integer
        format: int32
    required:
    - id
    - order_line_id
    - date
    - description
    - backoffice_comment
    - email_id
    - user_id
    - status_id
  OrderLineWorkflowSteps:
    title: OrderLineWorkflowSteps
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/OrderLineWorkflowStepsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OrderLineWorkflowStepsEmbedded:
    title: OrderLineWorkflowStepsEmbedded
    type: object
    properties:
      items:
        $ref: '#/definitions/OrderLineWorkflowStep'
    required:
    - items
  OrderLineCommission:
    title: OrderLineCommission
    type: object
    properties:
      id:
        type: integer
        format: int32
      order_line_id:
        type: integer
        format: int32
      date:
        type: string
        format: date-time
      amount:
        type: number
        format: double
      amount_ordered:
        type: number
        format: double
      clawback:
        type: number
        format: double
      clawback_date:
        type: string
        format: date-time
      status_id:
        type: integer
        format: int32
    required:
    - id
    - order_line_id
    - amount
    - amount_ordered
    - clawback
    - status_id
  OrderLineCommissions:
    title: OrderLineCommissions
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/OrderLineCommissionsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OrderLineCommissionsEmbedded:
    title: OrderLineCommissionsEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/OrderLineCommission'
    required:
    - items
  OrderLineCashback:
    title: OrderLineCashback
    type: object
    properties:
      id:
        type: integer
        format: int32
      order_line_id:
        type: integer
        format: int32
      date:
        type: string
      amount:
        type: number
        format: double
      amount_ordered:
        type: number
        format: double
      estimated_cashback_date:
        type: string
        format: date-time
      effective_payment_date:
        type: string
        format: date-time
      status_id:
        type: integer
        format: int32
    required:
    - id
    - order_line_id
    - date
    - amount
    - amount_ordered
    - estimated_cashback_date
    - status_id
  OrderLineCashbacks:
    title: OrderLineCashbacks
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/OrderLineCashbacksEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  OrderLineCashbacksEmbedded:
    title: OrderLineCashbacksEmbedded
    type: object
    properties:
      items:
        $ref: '#/definitions/OrderLineCashback'
    required:
    - items
  Metadata:
    title: Metadata
    type: object
    properties:
      create:
        description: How to use the API with POST
        type: object
        additionalProperties:
          type: string
      read:
        description: How to use the API with GET
        type: object
        additionalProperties:
          type: string
  DiscountSubscriptionPeriod:
    title: DiscountSubscriptionPeriod
    description: key-value giving the subscription periods available for this discount.
    type: object
    properties:
      id:
        description: id of the discount subscription period
        type: integer
        format: int32
      discount_id:
        description: discount unique identifier
        type: integer
        format: int32
      product_id:
        description: product unique identifier
        type: integer
        format: int32
      duration:
        description: Number of month of the subscription period
        type: integer
        format: int32
    required:
    - id
    - discount_id
    - product_id
    - duration
  DiscountSubscriptionPeriods:
    title: DiscountSubscriptionPeriods
    description: The DiscountSubscriptionPeriods model is a collection model  that contains zero or more references to a set of DiscountSubscriptionPeriod, and links that guide you on ways to interact with the DiscountSubscriptionPeriods. The collection offers a paginated view of DiscountSubscriptionPeriod.
    type: object
    properties:
      total_items:
        description: Paginated item list
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/DiscountSubscriptionPeriodEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  DiscountSubscriptionPeriodEmbedded:
    title: DiscountSubscriptionPeriodEmbedded
    type: object
    properties:
      items:
        description: Paginated item list
        type: array
        items:
          $ref: '#/definitions/DiscountSubscriptionPeriod'
    required:
    - items
  TranslatedStringISO2Int:
    title: TranslatedStringISO2Int
    type: object
    properties:
      FR:
        description: int value for the french language
        type: integer
        format: int32
      NL:
        description: int value for the dutch language
        type: integer
        format: int32
      EN:
        description: int value for the english language
        type: integer
        format: int32
      DE:
        description: int value for the german language
        type: integer
        format: int32
    required:
    - FR
    - NL
    - EN
    - DE
  TranslatedStringISO2Boolean:
    title: TranslatedStringISO2Boolean
    type: object
    properties:
      FR:
        description: bool value for the french language
        type: boolean
      NL:
        description: bool value for the dutch language
        type: boolean
      EN:
        description: bool value for the english language
        type: boolean
      DE:
        description: bool value for the german language
        type: boolean
    required:
    - FR
    - NL
    - EN
    - DE
  BrandDisplay:
    title: BrandDisplay
    description: Info and params related to the display of a brand in a website
    type: object
    properties:
      is_sold:
        $ref: '#/definitions/TranslatedStringISO2Boolean'
      weight:
        $ref: '#/definitions/TranslatedStringISO2Int'
    required:
    - is_sold
    - weight
  BrandWeb:
    title: BrandWeb
    description: Web links of the brand for the current partner
    type: object
    properties:
      brand_url:
        $ref: '#/definitions/TranslatedStringISO2String'
      hardware_brand_url:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - brand_url
    - hardware_brand_url
  ProductTypeDescriptionHardware:
    title: ProductTypeDescriptionHardware
    description: product description for hardware part of the product
    type: object
    properties:
      is_hardware_variable:
        description: tells whether the product is a variable hardware product (mutually exclusive with is_hardware_declination)
        type: boolean
      is_hardware_declination:
        description: tells whether the product is a declination hardware product (mutually exclusive with is_hardware_variable)
        type: boolean
      variable_product_id:
        description: When the current product is a declination, product id of the associated variable product
        type: integer
        format: int32
      variable_attribute_hero_text:
        $ref: '#/definitions/TranslatedStringISO2String'
      declination_selected_option_joint_offer:
        description: When the current product is a declination, this gives the list of telecom option ids that the current hardware product is associated to - to make associations with the telecom product - joint offer
        type: array
        items:
          type: integer
          format: int32
    required:
    - is_hardware_variable
    - is_hardware_declination
    - variable_attribute_hero_text
    - declination_selected_option_joint_offer
  Tag:
    title: Tag
    description: ''
    type: object
    properties:
      id:
        description: unique identifier of the tag
        type: integer
        format: int32
      value_translated:
        $ref: '#/definitions/TranslatedStringISO2String'
      color:
        description: 'Hexadecimal color with # associated to the tag'
        type: string
      tag_group_id:
        description: ID of the tag group this tag is associated
        type: integer
        format: int32
    required:
    - id
    - value_translated
    - tag_group_id
  Tags:
    title: Tags
    description: The Tags model is a collection model  that contains zero or more references to a set of Tag, and links that guide you on ways to interact with the Tags. The collection offers a paginated view of Tags.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        description: Items returned by the query.
        type: array
        items:
          $ref: '#/definitions/TagsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  TagsEmbedded:
    title: TagsEmbedded
    description: ''
    type: object
    properties:
      items:
        $ref: '#/definitions/Tag'
    required:
    - items
  TagGroup:
    title: TagGroup
    description: ''
    type: object
    properties:
      id:
        description: unique identifier of the tag group
        type: integer
        format: int32
      is_hardware_feature:
        description: determines whether the tag group is associated as an hardware feature
        type: boolean
      is_hardware_attribute:
        description: determines whether the tag group is associated as an hardware attribute
        type: boolean
      type:
        description: 'type of group : COLOR, SELECT'
        type: string
      translatable_name:
        $ref: '#/definitions/TranslatedStringISO2String'
      internal_name:
        description: internally used name of identifying the tag group
        type: string
    required:
    - id
    - is_hardware_feature
    - is_hardware_attribute
    - type
    - translatable_name
    - internal_name
  TagGroups:
    title: TagGroups
    description: The TagGroups model is a collection model  that contains zero or more references to a set of TagGroup, and links that guide you on ways to interact with the TagGroups. The collection offers a paginated view of TagGroups.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/TagGroupsEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  TagGroupsEmbedded:
    title: TagGroupsEmbedded
    description: ''
    type: object
    properties:
      items:
        $ref: '#/definitions/TagGroup'
    required:
    - items
  Hardware:
    title: Hardware
    description: Hardware view of a product, describes a physical product (not a telecom one). An hardware product is not sold as it. It is declined around attributes. Theses products are sold in telecom joint offers.
    type: object
    properties:
      id:
        description: hardware product unique identifier (same as /product/id)
        type: integer
        format: int32
      slug:
        $ref: '#/definitions/TranslatedStringISO2String'
      brand_id:
        description: brand identifier
        type: integer
        format: int32
      brand_name:
        description: brand name
        type: string
      brand_slug:
        description: textual, url friendly identifier of the brand (you can find this brand by its slug)
        type: string
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      hero_text:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - id
    - slug
    - brand_id
    - brand_name
    - brand_slug
    - name
    - description
    - hero_text
  HardwareEmbedded:
    title: HardwareEmbedded
    description: ''
    type: object
    properties:
      items:
        $ref: '#/definitions/Hardware'
    required:
    - items
  Hardwares:
    title: Hardwares
    description: The Hardwares model is a collection model  that contains zero or more references to a set of Hardware, and links that guide you on ways to interact with the TagGroups. The collection offers a paginated view of TagGroups.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/HardwareEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  HardwareDeclination:
    title: HardwareDeclination
    description: Declination of an Hardware product by setting a value for associated attribute
    type: object
    properties:
      id:
        description: hardware declination product unique identifier (same as /product/id)
        type: integer
        format: int32
      slug:
        $ref: '#/definitions/TranslatedStringISO2String'
      hardware_id:
        description: this product is a declination of the given hardware_id Hardware product
        type: integer
        format: int32
      brand_id:
        description: brand identifier
        type: integer
        format: int32
      brand_name:
        description: brand name
        type: string
      brand slug:
        description: textual, url friendly identifier of the brand (you can find this brand by its slug)
        type: string
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      description:
        $ref: '#/definitions/TranslatedStringISO2String'
      short_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      banner:
        $ref: '#/definitions/TranslatedStringISO2String'
      banner_small:
        $ref: '#/definitions/TranslatedStringISO2String'
      quality_score:
        description: Astel rating for this product, from 0 to 100 (depends on the customer service / product quality perceived by Astel). Null is returned if unknown
        type: integer
        format: int32
      is_visible:
        description: tells if the product should be visible in a product info page (publicly available website). By default, all products available through the API is orderable
        type: boolean
      is_featured:
        description: tells if the product is featured on product page and should be sold / shown first
        type: boolean
      selected_option_id_joint_offer:
        description: to sell the current product, please refer to these telecom option of telecom product for Joint Offer
        type: array
        items:
          type: integer
          format: int32
    required:
    - id
    - slug
    - hardware_id
    - brand_id
    - brand_name
    - brand slug
    - name
    - description
    - short_description
    - banner
    - banner_small
    - is_visible
    - is_featured
    - selected_option_id_joint_offer
  HardwareDeclinationEmbedded:
    title: HardwareDeclinationEmbedded
    description: ''
    type: object
    properties:
      items:
        $ref: '#/definitions/HardwareDeclination'
    required:
    - items
  HardwareDeclinations:
    title: HardwareDeclinations
    description: The HardwareDeclinationsmodel is a collection model  that contains zero or more references to a set of HardwareDeclination, and links that guide you on ways to interact with the HardwareDeclinations. The collection offers a paginated view of HardwareDeclinations.
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: integer
        format: int32
      page_size:
        description: The number of items on each page.
        type: integer
        format: int32
      _embedded:
        $ref: '#/definitions/HardwareDeclinationEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
  HardwareDeclinationWeb:
    title: HardwareDeclinationWeb
    description: ''
    type: object
    properties:
      product_sheet_url:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - product_sheet_url
  HardwareDeclinationOffersSummary:
    title: HardwareDeclinationOffersSummary
    description: ''
    type: object
    properties:
      is_featured:
        description: if this offer is featured
        type: boolean
      price_one_time:
        description: sum of the one time prices
        type: number
        format: double
      price_per_month:
        description: sum of the monthly price
        type: number
        format: double
      price_per_month_discounted:
        description: sum of the monthly discounted price
        type: number
        format: double
      price_per_month_discounted_period:
        description: number of month the discounted price applies
        type: integer
        format: int32
      included_minutes_calls:
        description: number of included mobile minutes call. UNLIMITED if unlimited.
        type: string
      included_sms:
        description: number of included mobile sms. UNLIMITED if unlimited.
        type: string
      included_data:
        description: number of GB of included mobile data. UNLIMITED if unlimited.
        type: string
      order_token:
        description: token dentifying the current product / option combination to use for ordering
        type: string
      hardware_declination_id:
        description: id of the hardware declination associated with this offer
        type: integer
        format: int32
    required:
    - is_featured
    - price_one_time
    - price_per_month
    - price_per_month_discounted
    - price_per_month_discounted_period
    - included_minutes_calls
    - included_sms
    - included_data
    - order_token
    - hardware_declination_id
  HardwareDeclinationOffersBrand:
    title: HardwareDeclinationOffersBrand
    description: ''
    type: object
    properties:
      id:
        description: unique identifier of the brand associated to this declination offer
        type: integer
        format: int32
      name:
        description: name of the brand
        type: string
      slug:
        description: slug of the brand
        type: string
      logo:
        description: url of logo to display for the brand
        type: string
      color_code:
        description: hexadecimal value associated to the brand
        type: string
    required:
    - id
    - name
    - slug
    - logo
    - color_code
  HardwareDeclinationOffersOption:
    title: HardwareDeclinationOffersOption
    description: ''
    type: object
    properties:
      id:
        description: unique identifier of the telecom option associated to this offer
        type: integer
        format: int32
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      price:
        description: price of the option - see price_type for monthly or unique
        type: number
        format: double
      activation_fee:
        description: unique payment for activating the option
        type: number
        format: double
      is_htva:
        description: If the given option prices are written tax exclusive or tax inclusive
        type: boolean
      price_type:
        description: monthly or unique
        type: string
      discount_description:
        $ref: '#/definitions/TranslatedStringISO2String'
      is_bestseller:
        description: if the option is a bestseller and should be displayed in a featured manner
        type: boolean
      extra_data:
        description: the number of extra Mb this option gives to the associated mobile product. Unlimited if it is unlimited
        type: string
    required:
    - id
    - name
    - price
    - activation_fee
    - is_htva
    - price_type
    - discount_description
    - is_bestseller
    - extra_data
  HardwareDeclinationOffersProduct:
    title: HardwareDeclinationOffersProduct
    description: ''
    type: object
    properties:
      id:
        description: unique identifier of the telecom product associated to this offer
        type: integer
        format: int32
      name:
        $ref: '#/definitions/TranslatedStringISO2String'
      price:
        description: price per month
        type: number
        format: double
      discounted_price:
        description: discounted price per month
        type: number
        format: double
      discounted_price_period:
        description: number of month the discounted price applies
        type: integer
        format: int32
      activation_fee:
        description: one time activation fee to pay
        type: number
        format: double
      installation_fee:
        description: one time installation fee to pay
        type: number
        format: double
      is_htva:
        description: if the prices of the product are given tax exempt or not
        type: boolean
      included_minutes_calls:
        description: number of mobile minute included in the product - UNLIMITED if unlimited
        type: string
      included_sms:
        description: number of mobile sms included in the product - UNLIMITED if unlimited
        type: string
      included_data:
        description: number of MB of mobile data included in the product - UNLIMITED if unlimited
        type: string
      price_description:
        $ref: '#/definitions/TranslatedStringISO2String'
    required:
    - id
    - name
    - price
    - discounted_price
    - discounted_price_period
    - activation_fee
    - installation_fee
    - is_htva
    - included_minutes_calls
    - included_sms
    - included_data
    - price_description
  HardwareDeclinationOffer:
    title: HardwareDeclinationOffer
    description: ''
    type: object
    properties:
      summary:
        $ref: '#/definitions/HardwareDeclinationOffersSummary'
      brand:
        $ref: '#/definitions/HardwareDeclinationOffersBrand'
      option:
        $ref: '#/definitions/HardwareDeclinationOffersOption'
      product:
        $ref: '#/definitions/HardwareDeclinationOffersProduct'
    required:
    - summary
    - brand
    - option
    - product
  HardwareDeclinationOfferEmbedded:
    title: HardwareDeclinationOfferEmbedded
    description: ''
    type: object
    properties:
      items:
        $ref: '#/definitions/HardwareDeclinationOffer'
    required:
    - items
  HardwareDeclinationOffers:
    title: HardwareDeclinationOffers
    description: ''
    type: object
    properties:
      total_items:
        description: The total number of items on every page.
        type: integer
        format: int32
      page:
        description: The number of the current page of items.
        type: string
      page_size:
        description: The number of items on each page.
        type: string
      _embedded:
        $ref: '#/definitions/HardwareDeclinationOfferEmbedded'
    required:
    - total_items
    - page
    - page_size
    - _embedded
security:
- api-key: []
tags:
- name: v2_00